xUnit.net, pois um produto testado é, certamente, de melhor qualidade
Neste artigo, demonstraremos como construir e performar seus primeiros testes unitários automatizados, utilizando, para tanto, a ferramenta construída para o .NET Framework, gratuita e de código aberto xUnit. 
Testes Unitários(Unit tests), o que são?
//
Por que testar?
É fácil inferir que um produto bem testado é, no mais das vezes, um produto de melhor qualidade em relação aquele que não. No desenvolvimento de software não é diferente. 
Já dizia minha avó: Problemas resolvidos no início são mais fáceis de resolver.(pode ser melhorado)
Só testes podem prevenir que problemas não previstos durante o desenvolvimento de determinado produto perdurem e, no futuro, venham a causar dor de cabeça durante os testes de integração, ou mesmo prejuízos no momento da utilização em produção, elevando, nestas situações os custos de manutenção. 
Testes Unitários não é tempo gasto, é investido.
Um código unitariamente testado faz o processo de desenvolvimento, refatoração e escalonamento algo mais ágio(e até mesmo desejável). Um dos motivos é porquê evitam longas sessões de depuração(debug), dado que o desenvolvedor pode executar os testes e, com ajuda dos mesmos, encontrar de imediato a(s) parte(s) do sistema que por ventura tenham deixado de funcionar em razão de alguma alteração. 
Qual desenvolvedor nunca deixou de refatorar um código, adicionar uma nova funcionalidade ou, até mesmo, atualizar uma biblioteca/dependência por não poder garantir, no futuro, a integridade de alguma aplicação?
Mais motivos para testar
Você pode encontrar no nosso blog(link) um artigo de um dos nossos diretores demonstrando como a automação de testes evita prejuízos no sistema financeiro(link).

